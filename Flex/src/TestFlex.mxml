<?xml version="1.0"?>
<s:Application
		xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:local="*"
		width="800" height="700" frameRate="60">

	<fx:Script><![CDATA[
		import com.greensock.TimelineLite;
		import com.greensock.TweenLite;

		import spark.components.Label;

		public static const TEST_OBJECT_COUNT:int = 10000;

		private var addingStartTime:Date;

		private var labelList:Vector.<Label> = new Vector.<Label>();

		private var panSequence:TimelineLite;

		private var scaleSequence:TimelineLite;

		private function createLabels():void {
			var startTime:Date = new Date();
			var i:int;
			var count:int = TEST_OBJECT_COUNT;
			for (i = 0; i < count; i++) {
				var label:Label = new Label();
				label.x = Math.random() * 760;
				label.y = Math.random() * 460;
				label.text = "This is a label.";
				labelList.push(label);
				labelGroup.addElement(label);
			}
			logView.logActionTime(startTime, "creating");
			addingStartTime = new Date();
			callLater(panLabels);
		}

		private function panLabels():void {
			logView.logActionTime(addingStartTime, "adding");
			var startTime:Date = new Date();
			panSequence = new TimelineLite({onComplete: panComplete, onCompleteParams: [startTime]});
			panSequence.append(new TweenLite(labelGroup, 2, {x: "700", y: "700"}));
			panSequence.append(new TweenLite(labelGroup, 2, {x: "-700", y: "-700"}));
			panSequence.play();
		}

		private function panComplete():void {
			logView.logActionTime(arguments[0], "panning");
			panSequence = null;
			scaleLabels();
		}

		private function scaleLabels():void {
			var startTime:Date = new Date();
			scaleSequence = new TimelineLite({onComplete: scaleComplete, onCompleteParams: [startTime]});
			scaleSequence.append(new TweenLite(labelGroup, 2, {scaleX: "-0.9", scaleY: "-0.9"}));
			scaleSequence.append(new TweenLite(labelGroup, 2, {scaleX: "0.9", scaleY: "0.9"}));
			scaleSequence.play();
		}

		private function scaleComplete():void {
			logView.logActionTime(arguments[0], "scaling");
			scaleSequence = null;
			destroyLabels();
		}

		private function destroyLabels():void {
			var startTime:Date = new Date();
			var i:int;
			var count:int = labelList.length;
			for (i = 0; i < count; i++) {
				var label:Label = labelList.shift();
				labelGroup.removeElement(label);
			}
			logView.logActionTime(startTime, "destroying");
		}
		]]></fx:Script>

	<s:layout>
		<s:VerticalLayout/>
	</s:layout>

	<s:Group width="800" height="500">
		<s:Group id="labelGroup" cacheAsBitmap="true"/>
	</s:Group>

	<s:Button id="flexButton" label="Run Spark Label Test" click="createLabels();"/>

	<local:LogView id="logView" width="800"/>

</s:Application>
